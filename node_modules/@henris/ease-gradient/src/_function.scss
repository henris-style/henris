@function create-ease($ease: 'linear', $t: 0, $b: 0, $c: 10, $d: 10) {
	// $t = time
	// $b = start
	// $c = chang
	// $d = duration
	@if $ease == 'ease-in-cubic' OR $ease == 'easeIn' {
		$t: $t / $d;
		@return $c * $t * $t * $t + $b;
	} @else if $ease == 'ease-in-quad' OR $ease == 'easeInQuad' {
		$t: $t / $d;
		@return $c * $t * $t + $b;
	} @else if $ease == 'ease-out-quad' OR $ease == 'easeOutQuad' {
		$t: $t / $d;
		@return -$c * $t * ($t - 2) + $b;
	} @else if $ease == 'ease-in-out-quad' OR $ease == 'easeInOutQuad' {
		$t: $t / $d;
		@return -$c * $t * ($t - 2) + $b;
	} @else if $ease == 'ease-in-cubic' OR $ease == 'easeInCubic' {
		$t: $t / $d;
		@return $c * $t * $t * $t + $b;
	} @else if $ease == 'ease-out-cubic' OR $ease == 'easeOutCubic' {
		$t: $t / $d;
		$t: $t - 1;
		@return $c * ($t * $t * $t + 1) + $b;
	} @else if $ease == 'ease-in-out-cubic' OR $ease == 'easeInOutCubic' {
		$t: $t / $d/2;
		@if ($t < 1) {
			@return $c/2 * $t * $t * $t + $b;
		} @else {
			$t: $t - 2;
			@return $c/2 * ($t * $t * $t + 2) + $b;
		}
	} @else if $ease == 'ease-in-quart' OR $ease == 'easeInQuart' {
		$t: $t / $d;
		@return $c * $t * $t * $t * $t + $b;
	} @else if $ease == 'ease-out-quart' OR $ease == 'easeOutQuart' {
		$t: $t / $d;
		$t: $t - 1;
		@return -$c * ($t * $t * $t * $t - 1) + $b;
	} @else if $ease == 'ease-in-out-quart' OR $ease == 'easeInOutQuart' {
		$t: $t / $d/2;
		@if $t < 1 {
			@return $c/2 * $t * $t * $t * $t + $b;
		} @else {
			$t: $t - 2;
			@return -$c/2 * ($t * $t * $t * $t - 2) + $b;
		}
	} @else if $ease == 'ease-in-quint' OR $ease == 'easeInQuint' {
		$t: $t / $d;
		@return $c * $t * $t * $t * $t * $t + $b;
	} @else if $ease == 'ease-out-quite' OR $ease == 'easeOutQuint' {
		$t: $t / $d;
		$t: $t - 1;
		@return $c * ($t * $t * $t * $t * $t + 1) + $b;
	} @else if $ease == 'ease-in-out-quint' OR $ease == 'easeInOutQuint' {
		$t: $t / $d/2;
		@if $t < 1 {
			@return $c/2 * $t * $t * $t * $t * $t + $b;
		} @else {
			$t: $t - 2;
			@return $c/2 * ($t * $t * $t * $t * $t + 2) + $b;
		}
	} @else if $ease == 'easeInSine' OR $ease == 'easeInSine' {
		@return -$c * cos($t/$d * (pi() / 2)) + $c + $b;
	} @else if $ease == 'easeOutSine' OR $ease == 'easeOutSine' {
		@return $c * sin($t/$d * (pi() / 2)) + $b;
	} @else if $ease == 'easeInOutSine' OR $ease == 'easeInOutSine' {
		@return -$c/2 * (cos(pi() * $t/$d) - 1) + $b;
	} @else if $ease == 'easeInExpo' OR $ease == 'easeInExpo' {
		@return $c * pow(2, 10 * ($t/$d - 1)) + $b;
	} @else if $ease == 'easeOutExpo' OR $ease == 'easeOutExpo' {
		@return $c * (-#{pow(2, -10 * $t / $d)} + 1) + $b;
	} @else if $ease == 'ease-in-out-expo' OR $ease == 'easeInOutExpo' {
		$t: $t / $d/2;
		@if $t < 1 {
			@return $c/2 * pow(2, 10 * ($t - 1)) + $b;
		} @else {
			$t: $t - 1;
			@return $c/2 * (-#{pow(2, -10 * $t)} + 2) + $b;
		}
	} @else if $ease == 'ease-in-circ' OR $ease == 'easeInCirc' {
		$t: $t / $d;
		$v: -$c * (sqrt(1 - $t * $t) - 1) + $b;
		@return $v;
	} @else if $ease == 'ease-out-circ' OR $ease == 'easeOutCirc' {
		$t: $t / $d;
		$t: $t - 1;

		@return $c * sqrt(1 - $t * $t) + $b;
	} @else if $ease == 'ease-in-out-circ' OR $ease == 'easeInOutCirc' {
		$t: $t / $d/2;
		@if $t < 1 {
			@return -$c/2 * (sqrt(1 - $t * $t) - 1) + $b;
		} @else {
			$t: $t - 2;
			@return $c/2 * (sqrt(1 - $t * $t) + 1) + $b;
		}
	}
	@else if $ease == 'easeInSin' {
    @return 1 + sin(pi() / 2 * $t - pi() / 2);
  }
	@else if $ease == 'easeOutSin'{
    @return sin(pi() / 2 * $t);
  }
	@else if $ease == 'easeInOutSin' {
    @return (1 + sin(pi() * $t - pi() / 2)) / 2;
  }
	
	
	

	// Linear

	@else {
		@return $c * $t / $d + $b;
	}
}




@function calc-bezier($i, $ease) {
	$m1: 1 - $i;
  $p1: $m1 * $m1 * $m1 * nth($ease, 1);
  $p2: 3 * $m1 * $m1 * $i * nth($ease, 2);
  $p3: 3 * $m1 * $i * $i * nth($ease, 3);
  $p4: $i * $i * $i * nth($ease, 4);
  $val: $p1 + $p2 + $p3 + $p4;      
  @return $val;
}

@function bezier($i, $ease, $steps){
  @return percentage(round(calc-bezier($i, $ease) / calc-bezier($steps, $ease) * 100)/100);  
}